{"version":3,"sources":["../src/frameworks/base.js","../src/frameworks/ccpa_from_us_privacy_string.js","../src/frameworks/ccpa_on_chorus.js","../src/frameworks/index.js","../src/frameworks/us_privacy_string_and_api_generator.js","../src/lib/cookie.js","../src/privacy_compliance.js"],"names":[],"mappings":"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","file":"data-privacy-compliance.js","sourcesContent":["class FrameworkBase {\n  constructor() {\n    this.privacyComplianceInstance = null;\n  }\n\n  static isAutoLoaded() {\n    return true;\n  }\n\n  name() {\n    return 'FrameworkBase';\n  }\n\n  isApplicable() {\n    return true;\n  }\n\n  useConfig(someConfigs = {}) {}\n\n  supportedCapabilities() {\n    return [];\n  }\n\n  supportedGenerators() {\n    return [];\n  }\n\n  canAnswerCapability(capability) {\n    return this.supportedCapabilities().includes(capability);\n  }\n\n  canGenerate(ability) {\n    return this.supportedGenerators().includes(ability);\n  }\n\n  setPrivacyComplianceInstance(pc) {\n    this.privacyComplianceInstance = pc;\n  }\n\n  log(...args) {\n    this.privacyComplianceInstance && this.privacyComplianceInstance.log(`[${this.name()}]`, ...args);\n  }\n}\n\nmodule.exports = FrameworkBase;\n","const FrameworkBase = require('./base');\n\n/**\n * Implements usprivacy string framework\n * for more information on the US Privacy string see:\n * https://github.com/InteractiveAdvertisingBureau/USPrivacy/blob/master/CCPA/US%20Privacy%20String.md#us-privacy-string-format\n */\nclass CCPAFromUSPrivacyString extends FrameworkBase {\n  constructor() {\n    super();\n    this.usPrivacyString = '';\n  }\n\n  name() {\n    return 'CCPAFromUSPrivacyString';\n  }\n\n  useConfig({ usp }) {\n    if (usp) {\n      this.usPrivacyString = ('' + usp).toUpperCase();\n    }\n  }\n\n  isApplicable() {\n    return !!this.usPrivacyString;\n  }\n\n  supportedCapabilities() {\n    return ['canUsePersonalInformationForTargeting', 'hasBeenNotifiedOfRights', 'isLSPACoveredTransaction'];\n  }\n\n  canUsePersonalInformationForTargeting() {\n    return this.consentStringAllowsPersonalDataSale();\n  }\n\n  hasBeenNotifiedOfRights() {\n    return this.consentStringAcknowledgesUserHasBeenNotifiedOfRights();\n  }\n\n  consentStringAllowsPersonalDataSale() {\n    if (!this.supportedUsPrivacyStringVersion()) return true;\n    if (!this.consentStringAcknowledgesUserHasBeenNotifiedOfRights()) return true;\n    return this.usPrivacyString[2] !== 'Y';\n  }\n\n  isLSPACoveredTransaction() {\n    return this.supportedUsPrivacyStringVersion() && this.usPrivacyString[3] === 'Y';\n  }\n\n  consentStringAcknowledgesUserHasBeenNotifiedOfRights() {\n    return this.supportedUsPrivacyStringVersion() && this.usPrivacyString[1] === 'Y';\n  }\n\n  supportedUsPrivacyStringVersion() {\n    return this.usPrivacyString.length === 4 && this.usPrivacyString[0] === '1';\n  }\n}\n\nmodule.exports = CCPAFromUSPrivacyString;\n","const Cookie = require('../lib/cookie');\nconst FrameworkBase = require('./base');\n\nclass CcpaOnChorus extends FrameworkBase {\n  name() {\n    return 'CcpaOnChorus';\n  }\n\n  isApplicable() {\n    return !!window && !!window.Chorus;\n  }\n\n  supportedCapabilities() {\n    return ['canUsePersonalInformationForTargeting', 'hasBeenNotifiedOfRights', 'isLSPACoveredTransaction'];\n  }\n\n  canUsePersonalInformationForTargeting() {\n    return !Cookie.hasCookie('_chorus_ccpa_consent_donotsell');\n  }\n\n  hasBeenNotifiedOfRights() {\n    // see https://github.com/voxmedia/sbn/commit/ce74ab006c89afe799afffa2a31137454d9e5bb3\n    return Cookie.hasCookie('_chorus_ccpa_consent');\n  }\n\n  isLSPACoveredTransaction() {\n    return true;\n  }\n}\n\nmodule.exports = CcpaOnChorus;\n","const CcpaOnChorus = require('./ccpa_on_chorus');\nconst CcpaFromUsPrivacyString = require('./ccpa_from_us_privacy_string');\nconst UsPrivacyStringAndAPIGenerator = require('./us_privacy_string_and_api_generator');\n\nmodule.exports = [CcpaOnChorus, CcpaFromUsPrivacyString, UsPrivacyStringAndAPIGenerator];\n","const FrameworkBase = require('./base');\n\nconst US_PRIVACY_API_VERSION = 1;\n\n/**\n * Implements usprivacy string framework\n * for more information on the US Privacy string see:\n * https://github.com/InteractiveAdvertisingBureau/USPrivacy/blob/master/CCPA/US%20Privacy%20String.md#us-privacy-string-format\n */\nclass UsPrivacyStringAndAPIGenerator extends FrameworkBase {\n  constructor() {\n    super();\n    this.window = window;\n    this.document = document;\n  }\n\n  name() {\n    return 'UsPrivacyStringAndAPIGenerator';\n  }\n\n  supportedGenerators() {\n    return ['usPrivacyString', 'installPrivacyAPI'];\n  }\n\n  useConfig({ window, document }) {\n    this.window = window;\n    this.document = document;\n  }\n\n  usPrivacyString(callback = () => {}) {\n    callback(this.buildUsPrivacyString(), this);\n  }\n\n  installPrivacyAPI(callback = () => {}) {\n    this.window.__uspapi = this.handleUSPrivacyAPI.bind(this);\n    this.createUspapiFrame();\n    callback(true);\n  }\n\n  // Private methods ---------\n  buildUsPrivacyString() {\n    let usp = '' + US_PRIVACY_API_VERSION;\n    usp += this.privacyComplianceInstance.hasBeenNotifiedOfRights() ? 'Y' : 'N';\n    usp += this.privacyComplianceInstance.canUsePersonalInformationForTargeting() ? 'N' : 'Y';\n    usp += this.privacyComplianceInstance.isLSPACoveredTransaction() ? 'Y' : 'N';\n    return usp;\n  }\n\n  handleUSPrivacyAPI(command, version, callback) {\n    if (typeof callback !== 'function') {\n      throw `__uspapi: Expected ${callback} to be a function, received a ${typeof callback}`;\n    }\n\n    let canSuccessfullyAnswer = true;\n    let usPrivacyDataString = `${US_PRIVACY_API_VERSION}---`;\n\n    if (version !== US_PRIVACY_API_VERSION) {\n      console.error(`__uspapi: Only able to handle version 1`);\n      canSuccessfullyAnswer = false;\n    }\n\n    switch (command) {\n      case 'getUSPData':\n        usPrivacyDataString = this.buildUsPrivacyString();\n        break;\n      default:\n        canSuccessfullyAnswer = false;\n        console.error(`__uspapi: Unable to handle command '${command}'`);\n    }\n\n    this.log(\n      `${canSuccessfullyAnswer ? 'Successfully' : 'Unsuccessfully'} handled CCPA privacy request ${usPrivacyDataString}`\n    );\n\n    callback(\n      {\n        uspString: usPrivacyDataString,\n        version: US_PRIVACY_API_VERSION,\n      },\n      canSuccessfullyAnswer\n    );\n  }\n\n  /**\n   * Creates a top level iframe used to proxy messages between\n   * frames and this implementation of the CCPA Compliance Framework\n   *\n   * It works by:\n   *   1. Creating a specially named iframe\n   *   2. Setting up an event listener on this frame\n   *   3. This listener will proxy \"__uspapiCall\" messages to handleUSPrivacyAPI\n   *   4. and post the message back to the sending frame.\n   */\n  createUspapiFrame() {\n    this.log('Creating __uspapiLocator iframe');\n\n    const frame = this.document.createElement('iframe');\n    frame.setAttribute('name', '__uspapiLocator');\n    frame.style.display = 'none';\n\n    if (this.document.readyState === 'loading') {\n      this.document.addEventListener('DOMContentLoaded', () => {\n        this.document.body.appendChild(frame);\n        this.setupIframeMessageProxyOn(frame);\n      });\n    } else {\n      this.document.body.appendChild(frame);\n      this.setupIframeMessageProxyOn(frame);\n    }\n  }\n\n  /**\n   * Will setup listener proxy on the iframe which... accomplish 2-4 from above\n   *\n   *   2. Setting up an event listener on this frame\n   *   3. This listener will proxy \"__uspapiCall\" messages to handleUSPrivacyAPI\n   *   4. and post the message back to the sending frame.\n   *\n   * @param {DOMElement} frame the iframe to setup the listener on\n   */\n  setupIframeMessageProxyOn(frame) {\n    frame.contentWindow.addEventListener('message', event => {\n      const messageData = event.data;\n\n      if (messageData && messageData.__uspapiCall) {\n        this.log('__uspapiLocator responding to message request');\n\n        const uspapiCallParameters = messageData.__uspapiCall;\n        const targetSource = event.source || window.top;\n        const targetOrigin = event.origin || '*';\n\n        this.handleUSPrivacyAPI(\n          uspapiCallParameters.command,\n          uspapiCallParameters.version,\n          (uspData, wasSuccessful) => {\n            targetSource.postMessage(\n              {\n                __uspapiReturn: {\n                  returnValue: uspData,\n                  success: wasSuccessful,\n                  callId: uspapiCallParameters.callId,\n                },\n              },\n              targetOrigin\n            );\n          }\n        );\n      }\n    });\n  }\n}\n\nmodule.exports = UsPrivacyStringAndAPIGenerator;\n","/**\n * Gets all the cookies as a Map\n *\n * @returns Map of cookie values\n */\nfunction getAllCookies() {\n  return new Map(document.cookie.split(';').map(cookie => cookie.trim().split('=')));\n}\n\n/**\n * Checks if cookie exists\n *\n * @param {String} name name of cookie\n * @return {Boolean} true of cookie is present\n */\nfunction hasCookie(name) {\n  return getAllCookies().has(name);\n}\n\n/**\n * Gets the cookie value\n *\n * @param {String} name name of cookie\n * @return {String} the value of the cookie\n */\nfunction getCookie(name) {\n  return getAllCookies().get(name);\n}\n\nmodule.exports = {\n  getAllCookies,\n  hasCookie,\n  getCookie,\n};\n","const frameworks = require('./frameworks');\n\n/**\n * The public Privacy Compliance class, which is exported as a singleton\n *\n * Responsible for managing frameworks and proxying requests to related\n * frameworks.\n *\n * Note: This uses Proxy() to support introspection of method calls\n * to make it look like this class has a lot more functions\n * than it really does\n */\nclass PrivacyCompliance {\n  constructor() {\n    this.frameworks = [];\n    this.supportedCapabilities = new Set();\n    this.supportedGenerators = new Set();\n    this.logEntries = [];\n    this.logger = (...args) => {\n      this.logEntries.push(args);\n    };\n  }\n\n  /**\n   * useConfig is a convenient way to pass configuration values to all frameworks.\n   * When a useConfig is called, every loaded framework will have their own\n   * useConfig methods called.\n   *\n   * The ideal pattern is to use keys to type the configs, for example:\n   * PrivacyCompliance.useConfig({\n   *   usp: \"1TFT\"\n   * })\n   * Which could signal to any listening capabiltiy-frameworks to use the new\n   * US Privacy String\n   *\n   * @param {Object} someConfigs any config to share with all frameworks\n   */\n  useConfig(someConfigs) {\n    this.frameworks.forEach(f => f.useConfig(someConfigs));\n  }\n\n  /**\n   * Allows this libraries internal logs to be accessible to including libraries.\n   * The default is to also insert any missed logs. Because this is setup as a singleton,\n   * it is easy to miss the initial setup logs, that happened, before a logger was setup.\n   *\n   * @param {Function} logFunction to be called everytime a new log entry is generated\n   * @param {Boolean} relogMissedEntries when true will relog missed entries from before the logger was wired up\n   */\n  useLogger(logFunction, relogMissedEntries = true) {\n    this.logger = logFunction;\n    if (relogMissedEntries) {\n      this.logEntries.forEach(entry => this.log(...entry));\n    }\n  }\n\n  addFramework(frameworkInstance) {\n    this.log('Adding new framework: ', frameworkInstance.name());\n    frameworkInstance.setPrivacyComplianceInstance(privacyComplianceSingleton);\n    this.frameworks.push(frameworkInstance);\n    frameworkInstance.supportedCapabilities().forEach(c => this.supportedCapabilities.add(c));\n    frameworkInstance.supportedGenerators().forEach(c => this.supportedGenerators.add(c));\n  }\n\n  /**\n   * Checks if a given Capability (as a string) can be answered by the loaded\n   * frameworks.\n   *\n   * Caution: not all frameworks will be applicable and able to\n   * answer this capability for all environments.\n   *\n   * @param {String} capability the method name of the capability\n   * @returns Boolean true if the capability can be answered\n   */\n  hasFrameworkLoadedToAnswerCapability(capability) {\n    return this.supportedCapabilities.has(capability);\n  }\n\n  canGenerate(ability) {\n    return this.supportedGenerators.has(ability);\n  }\n\n  /**\n   * Returns a list of applicable frameworks for this environment.\n   */\n  applicableFrameworks() {\n    return this.frameworks.filter(f => f.isApplicable());\n  }\n\n  log(...args) {\n    this.logger(...args);\n  }\n\n  get Generator() {\n    return new Proxy(this, {\n      get: (privacyComplianceInstance, property) => {\n        return privacyComplianceInstance.proxyToFrameworkGenerators(property);\n      },\n    });\n  }\n\n  // For use with testing only\n  reset() {\n    this.frameworks = [];\n    this.supportedCapabilities = new Set();\n    this.supportedGenerators = new Set();\n  }\n\n  /**\n   * This method will take a string, translate it into a method and call it\n   * on the added frameworks. If all applicable frameworks support this capability\n   * then it will return true, if not it will be false.\n   *\n   * @param {String} methodName the name of methods to call on the base frameworks\n   * @return Boolean if all the frameworks permit this\n   */\n  proxyToFrameworks(methodName) {\n    try {\n      return this.frameworks\n        .filter(f => f.isApplicable())\n        .filter(f => f.canAnswerCapability(methodName))\n        .map(f => {\n          this.log(f.name() + ' answering: ' + methodName);\n          return f;\n        })\n        .map(f => f[methodName].call(f))\n        .every(result => !!result);\n    } catch (e) {\n      console.error(`There was an error calling ${methodName} - ${e}`);\n    }\n  }\n\n  /**\n   * This method will take a string, translate it into a method and call it\n   * on the added frameworks. If all applicable frameworks support this generator\n   * then it will be called, with the given passback.\n   *\n   * Note this is a little more complex than capabilities, because like capabilities\n   * multiple frameworks can be called for this generator, and there is no convenient way\n   * to collect those responses, so instead it takes a callback that will be executed for\n   * every generator run.\n   *\n   * @param {String} methodName the name of methods to call on the base frameworks\n   * @returns {Function} the function to execute, with callback of the generators response\n   */\n  proxyToFrameworkGenerators(methodName) {\n    if (this.canGenerate(methodName)) {\n      return (callback = () => {}) => {\n        try {\n          this.frameworks\n            .filter(f => f.isApplicable())\n            .filter(f => f.canGenerate(methodName))\n            .forEach(f => f[methodName].call(f, callback));\n        } catch (e) {\n          console.error(`There was an error calling ${methodName} - ${e}`);\n        }\n      };\n    } else {\n      this.throwUnsupportedError(methodName);\n    }\n  }\n\n  throwUnsupportedError(method) {\n    throw new TypeError(\n      `Can not call '${method}'. It is not found in the loaded frameworks. Supported capabilities: ${Array.from(\n        this.supportedCapabilities\n      ).join(', ')}`\n    );\n  }\n\n  /**\n   * This uses a modern Proxy() object to support arbitrary missing methods\n   * which allows the frameworks to declare their own capability methods without\n   * needing to add those to this class.\n   */\n\n  applyProxy() {\n    return new Proxy(this, {\n      get: (privacyComplianceInstance, property) => {\n        if (Reflect.has(privacyComplianceInstance, property)) {\n          return Reflect.get(privacyComplianceInstance, property);\n        } else if (privacyComplianceInstance.hasFrameworkLoadedToAnswerCapability(property)) {\n          return () => {\n            return privacyComplianceInstance.proxyToFrameworks(property);\n          };\n        } else {\n          privacyComplianceInstance.throwUnsupportedError(property);\n        }\n      },\n    });\n  }\n}\n\nconst privacyComplianceSingleton = new PrivacyCompliance().applyProxy();\n\n// Autoload all of the auto-loaded frameworks\nframeworks\n  .filter(f => f.isAutoLoaded())\n  .forEach(f => {\n    privacyComplianceSingleton.addFramework(new f());\n  });\n\nmodule.exports = privacyComplianceSingleton;\n"]}